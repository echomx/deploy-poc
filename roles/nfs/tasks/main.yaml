---
  - name: copy the nfs installer
    copy: 
      src: "/opt/installers/{{ item }}"
      dest: "/tmp/{{ item }}"
    with_items:
    - convert2nfs.zip
    - nfsenv.zip

  - name: unarchive the nfs installer
    unarchive: 
      src: "/tmp/{{ item }}"
      dest: /opt/
      remote_src: yes
    with_items:
    - convert2nfs.zip
    - nfsenv.zip

    
  - name: create the vg for nfs
    lvg:
      vg: "{{ nfs_vg }}"
      pvs: "{{ nfs_dev }}"

  - name: install the yum requirements
    yum: 
      name: "{{ item }}"
      state: present
    with_items:
    - nfs-utils
    - rpcbind
    - lvm2
    - gcc-c++
    - python-devel

  - name: set the port for nfs
    shell: echo 'MOUNTD_PORT=20048' >> /etc/sysconfig/nfs && echo  'STATD_PORT=20050' >> /etc/sysconfig/nfs && echo 'options lockd nlm_tcpport=20049' >> /etc/modprobe.d/lockd.conf && echo 'options lockd nlm_udpport=20049' >> /etc/modprobe.d/lockd.conf 
  
  - name: start the nfs and rpcbind service 
    service:
      name: "{{ item }}"
      state: started
      enabled: yes
    with_items:
    - rpcbind
    - nfs 

  
  - name: preinstall-add privilege
    shell:  chmod a+x bin/* 
    args:
      chdir: /opt/convert2nfs

  - name: create directory /nfs
    file:
      path: /nfs
      state: directory
      mode: 0755

  - name: install the interface
    shell: source /opt/nfsenv/bin/activate &&  python setup.py install
    args:
      chdir: /opt/convert2nfs
  - name: start the interface
    shell: source /opt/nfsenv/bin/activate && /opt/convert2nfs && uwsgi -d /var/log/convert2nfs.log --http-socket :8080 --venv /opt/nfsenv --pecan config.py
  - name: Wait 300 seconds for port 8080 to becomoe open on the host, don't start checking for 10 seconds
    wait_for:
      port: 8080
      delay: 10

# use systemd to start nfs failed, wait for later debug
#  - name: add the start  file
#    template:
#      src: startNfs.sh.j2
#      dest: /usr/local/bin/startNfs.sh
#      mode: 0751
#
#
#  - name: add the  stop file
#    template:
#      src: stopNfs.sh.j2
#      dest: /usr/local/bin/stopNfs.sh
#      mode: 0751
#
#  - name: add the service file
#    copy:
#      src: nfsinterface.service
#      dest: /usr/lib/systemd/system/nfsinterface.service
#      mode: 0644
#  - name: reload the service
#    shell: systemctl daemon-reload
#
#  - name: start the convert2nfs
#    service:
#      name: nfsinterface.service
#      state: started
#      enabled: yes
  - name: open 8080 on iptables
    shell: iptables -I INPUT -p tcp --dport 8080 -j ACCEPT
  - name: open the tcp port for nfs
    shell: for i in `rpcinfo -p|grep tcp|awk '{print $4}'|sort|uniq`; do iptables -I INPUT -p tcp --dport ${i} -j ACCEPT; done
  - name: open the udp port for nfs
    shell:  for i in `rpcinfo -p|grep udp|awk '{print $4}'|sort|uniq`; do iptables -I INPUT -p udp --dport ${i} -j ACCEPT; done
