#!/bin/bash
#create project for os_deploy
auth=`echo admin:{{ harbor_password }}|tr -d '\n'|base64`
curl -X POST \
  http://harbor.{{ os_subdomain }}/api/projects \
  -H 'authorization: Basic '$auth'' \
  -H 'cache-control: no-cache' \
  -H 'content-type: application/json' \
  -d '{
  "project_name": "openshift",
  "public": 1,
  "enable_content_trust": true,
  "prevent_vulnerable_images_from_running": false,
  "automatically_scan_images_on_push": true
}'
curl -X POST \
  http://harbor.{{ os_subdomain }}/api/projects \
  -H 'authorization: Basic '$auth'' \
  -H 'cache-control: no-cache' \
  -H 'content-type: application/json' \
  -d '{
  "project_name": "cockpit",
  "public": 1,
  "enable_content_trust": true,
  "prevent_vulnerable_images_from_running": false,
  "automatically_scan_images_on_push": true
}'
#import the image
cd {{ store_path }}/os39-base-images
docker load --input {{ store_path }}/os39-base-images/kubernetes_latest.tar
docker tag cockpit/kubernetes:latest harbor.{{ os_subdomain }}/cockpit/kubernetes:latest 
docker push harbor.{{ os_subdomain }}/cockpit/kubernetes:latest
rm -f {{ store_path }}/os39-base-images/kubernetes_latest.tar
docker login harbor.{{ os_subdomain }} -u admin -p {{ harbor_password }}
for i in `ls *.tar`
do
   image=openshift/`echo ${i%.*}|tr '_' ':'`
   targetImage="harbor.{{ os_subdomain }}/$image"
   docker load --input ${i}
   docker tag $image  $targetImage
   docker push $targetImage
   docker rmi $image $targetImage
done
